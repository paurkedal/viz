# Copyright 2011  Petter Urkedal
#
# This file is part of the Fform Standard Library.
#
# The Fform Standard Library is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# Fform is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
# more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Fform.  If not, see <http://www.gnu.org/licenses/>.

open prereq
open action
open memory
use cabi.stub_prefix "ffoc_"

val unsafe_ptr_array_of_function :
    int → (int → action φ (ptr φ)) → action φ (ptr φ)

val unsafe_ptr_array_of_array : array α → action φ (ptr φ)

let! unsafe_ptr_array_of_function n f
    let p do unsafe_malloc (scale_size n sizeof_ptr)
    let! loop i
	when i < n let x do f i
		   do unsafe_store_ptr (scale_size i sizeof_ptr) p x
		   do loop (i + 1)
    do loop 0
    be p

let unsafe_ptr_array_of_array xa
    be unsafe_ptr_array_of_function (data.array.length xa)
		(i ↦ unsafe_custom_load_ptr (data.array.get i xa))
