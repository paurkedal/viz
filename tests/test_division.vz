open effect

in check_int32
    open int32
    open int32.ops

    let! check_div_mod ai ni
	let a be int32.of_int ai
	let n be int32.of_int ni
	let q be int32.div a n
	let r be int32.mod a n
	assert q*n + r = a
	assert r = int32.mod (a + n) n
	let cq be int32.cdiv a n
	let cr be int32.cmod a n
	assert cq*n + cr = a
	if n > zero
	    assert - n < cr ≤ int32.zero
	else
	    assert int32.zero ≤ cr < - n

let main
    let! loop a n
	if a > 12 be ()
	do check_int32.check_div_mod a n
	do loop (a + 1) n
    do loop -50 5
    do loop -50 -5
    do loop -50 1
    do loop -50 -1
